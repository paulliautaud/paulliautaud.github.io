<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Paul Liautaud</title><link>https://paulliautaud.github.io/</link><atom:link href="https://paulliautaud.github.io/index.xml" rel="self" type="application/rss+xml"/><description>Paul Liautaud</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate><image><url>https://paulliautaud.github.io/media/icon_hu5a8bb89b166067dad42de6c6e5349de5_15995_512x512_fill_lanczos_center_3.png</url><title>Paul Liautaud</title><link>https://paulliautaud.github.io/</link></image><item><title>Example Talk</title><link>https://paulliautaud.github.io/talk/example-talk/</link><pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/talk/example-talk/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click on the &lt;strong>Slides&lt;/strong> button above to view the built-in slides feature.
&lt;/div>
&lt;/div>
&lt;p>Slides can be added in a few ways:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create&lt;/strong> slides using Wowchemy&amp;rsquo;s &lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">&lt;em>Slides&lt;/em>&lt;/a> feature and link using &lt;code>slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Upload&lt;/strong> an existing slide deck to &lt;code>static/&lt;/code> and link using &lt;code>url_slides&lt;/code> parameter in the front matter of the talk file&lt;/li>
&lt;li>&lt;strong>Embed&lt;/strong> your slides (e.g. Google Slides) or presentation video on this page using &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">shortcodes&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Further event details, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">page elements&lt;/a> such as image galleries, can be added to the body of this page.&lt;/p></description></item><item><title>Chapter 0 - Preliminaries</title><link>https://paulliautaud.github.io/teaching/python/00_preliminaries/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/teaching/python/00_preliminaries/</guid><description>&lt;p>This section will first present what Python is. Then, it will show and demistify the main steps to set Python and Anaconda environment on any laptop.&lt;/p>
&lt;h2 id="first-why-python-">First, why Python ?&lt;/h2>
&lt;p>Python is a general-purpose interpreted programming language which has the particularity of being very readable and pragmatic.
It has a very large base of external modules, especially scientific ones, which makes it particularly attractive for programming mathematical problems.
The fact that Python is an interpreted language makes it slower than compiled languages, but on the other hand it ensures a great speed of development which allows the human to work a little less while the computer will have to work a little more.
This particularity has made Python one of the main programming languages used by scientists.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>The prerequisite would be to know the basics of the Python language, for example as taught in the last year&amp;rsquo;s course.&lt;/p>
&lt;p>People who are not familiar with the basics of the Python language should take the MOOC (Massive Open Online Course) &lt;em>&lt;a href="https://www.fun-mooc.fr/fr/cours/python-3-des-fondamentaux-aux-concepts-avances-du-langage/" target="_blank" rel="noopener">Python 3 : des fondamentaux aux concepts avancés du langage&lt;/a>&lt;/em> available on the website of &lt;a href="https://www.fun-mooc.fr/" target="_blank" rel="noopener">France Université Numérique&lt;/a>.
In case access is restricted, the videos of the MOOC are available on &lt;a href="https://www.youtube.com/channel/UCIlUBOXnXjxdjmL_atU53kA/" target="_blank" rel="noopener">YouTube&lt;/a>.&lt;/p>
&lt;p>In addition, the realization of the exercises requires access to a computer or an online service with Python 3.6 (or more recent) completed by the following modules: &lt;code>numpy&lt;/code>, &lt;code>scipy&lt;/code>, &lt;code>sympy&lt;/code>, &lt;code>matplotlib&lt;/code>, &lt;code>numba&lt;/code>, &lt;code>networkx&lt;/code> and &lt;code>pandas&lt;/code>. The use of a code editor allowing writing in Python is also highly recommended. It is suggested here to use &lt;a href="https://jupyterlab.readthedocs.io/" target="_blank" rel="noopener">Jupyter Lab&lt;/a>, which allows both writing interactive notebooks and scripts and also adding one&amp;rsquo;s own solutions below the statements, which is very convenient. It is not necessary to use Jupyter Lab, other environments are also suitable, such as &lt;a href="https://www.spyder-ide.org/" target="_blank" rel="noopener">Spyder&lt;/a> or &lt;a href="https://jupyter-notebook.readthedocs.io/" target="_blank" rel="noopener">Jupyter Notebook&lt;/a>.&lt;/p>
&lt;p>The following sections describe how to install and run the Python environment or use it online without installation.&lt;/p>
&lt;h2 id="documentation">Documentation&lt;/h2>
&lt;p>It is generally not useful (nor desirable) to know all the functions and subtleties of the Python language for occasional use. On the other hand, it is essential to know how to use the documentation effectively. The official documentation is available at &lt;a href="https://docs.python.org/" target="_blank" rel="noopener">https://docs.python.org/&lt;/a>. The language and version can be selected on the top left. It is highly recommended to look at how the documentation is written and learn how to use it.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>Those unable or unwilling to install Python can go directly to the &lt;a href="#sec:intro-lancement">1.5 Launching Jupyter Lab&lt;/a> section for alternatives available online without installation.&lt;/p>
&lt;p>There are essentially four ways to install Python and the modules required to run the exercises:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Anaconda&lt;/strong> is a complete Python distribution, i.e. it directly installs a very large quantity of modules (much more than we actually need). The advantage of this installation is that it is very simple; the disadvantage is that it takes up a lot of disk space. This is the preferred method if you are running Windows or MacOS and do not have disk space problems.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Miniconda&lt;/strong> is a light version of Anaconda, which installs only the base by default. The advantage is that it takes up little disk space, but it requires an additional action to install the modules needed. This is the preferred method if you are on Windows or MacOS and have little disk space available.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Linux repositories:&lt;/strong> Most Linux distributions allow you to install Python and the basic modules directly from the package repositories that come with them. This is the preferred method under Linux.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Pip&lt;/strong> is a package manager for Python. This is the preferred method to add a module if Python is already installed by your operating system, and this module is not included in the packages of your distribution. This method allows a more fine and advanced management of installed modules than what is proposed with the previous methods.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="installation-with-anaconda">Installation with Anaconda&lt;/h3>
&lt;p>The easiest way to install Python 3 and all necessary dependencies on Windows and MacOS is to install &lt;a href="https://anaconda.org/" target="_blank" rel="noopener">Anaconda&lt;/a>. The disadvantage of Anaconda is that it takes a lot of disk space to install because so many modules are installed by default. Detailed installation procedures according to each operating system are described at: &lt;a href="https://docs.anaconda.com/anaconda/install/" target="_blank" rel="noopener">https://docs.anaconda.com/anaconda/install/&lt;/a>. In summary the installation procedure is as follows:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download Anaconda for Python 3 at: &lt;a href="https://www.anaconda.com/products/individual#Downloads" target="_blank" rel="noopener">https://www.anaconda.com/products/individual#Downloads&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Double-click on the downloaded file to start the installation of Anaconda, then follow the installation procedure (it is not necessary to install VS Code).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once the installation is complete, launch Anaconda Navigator from the start menu or from the list of applications.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="installation-with-miniconda">Installation with Miniconda&lt;/h3>
&lt;p>The &lt;a href="https://docs.conda.io/miniconda.html" target="_blank" rel="noopener">Miniconda&lt;/a> distribution has the advantage over Anaconda of taking up little disk space, at the cost of having to install the necessary modules manually. The quick installation procedure is as follows:&lt;/p>
&lt;ol>
&lt;li>Download Miniconda for Python 3 at: &lt;a href="https://docs.conda.io/miniconda.html" target="_blank" rel="noopener">https://docs.conda.io/miniconda.html&lt;/a>.&lt;/li>
&lt;li>Double-click on the downloaded file to start the Miniconda installation, then follow the installation procedure.&lt;/li>
&lt;li>Once the installation is complete, launch Anaconda Prompt from the Start menu or from the list of applications.&lt;/li>
&lt;li>In the terminal, type the command:
&lt;code>conda install anaconda-navigator numpy scipy sympy matplotlib numba networkx pandas jupyterlab&lt;/code>
and confirm the installation of the dependencies.&lt;/li>
&lt;/ol>
&lt;h3 id="installation-from-repositories">Installation from repositories&lt;/h3>
&lt;p>Most Linux distributions allow to easily install Python and the most standard modules directly from the repositories they include. The following procedure is for Ubuntu, but can be easily adapted to other distributions.&lt;/p>
&lt;ol>
&lt;li>Install Python 3:
sudo apt install python3 python-pip3&lt;/li>
&lt;li>Install the &lt;code>numpy&lt;/code>, &lt;code>scipy&lt;/code>, &lt;code>sympy&lt;/code>, &lt;code>matplotlib&lt;/code>, &lt;code>numba&lt;/code>, &lt;code>networkx&lt;/code> and &lt;code>pandas&lt;/code> modules:
sudo apt install python3-numpy python3-scipy python3-sympy python3-matplotlib python3-numba python3-networkx python3-pandas&lt;/li>
&lt;li>Jupyter Lab is not available in Ubuntu packages, so it must be installed with Pip:
pip3 install jupyterlab&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Note:&lt;/strong>
Depending on the operating system, you may have to replace the &lt;code>pip3&lt;/code> command with &lt;code>pip&lt;/code>. If you encounter permissions problem when running these commands, you should probably add &lt;code>--user&lt;/code> to the end of the previous command.&lt;/p>
&lt;h3 id="advanced-installation-with-pip">Advanced Installation with Pip&lt;/h3>
&lt;p>The following procedure describes the manual installation of modules with the &lt;a href="https://pip.pypa.io/en/stable/" target="_blank" rel="noopener">Pip&lt;/a> manager.&lt;/p>
&lt;ol>
&lt;li>Install Python from the address: &lt;a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/&lt;/a>.&lt;/li>
&lt;li>Install Pip from the address: &lt;a href="https://pip.pypa.io/en/stable/installation/" target="_blank" rel="noopener">https://pip.pypa.io/en/stable/installation/&lt;/a>&lt;/li>
&lt;li>Install the required modules by typing the following command line in a terminal:
pip3 install numpy scipy sympy matplotlib numba networkx pandas jupyterlab
&lt;strong>Note:&lt;/strong>
Depending on the operating system, you may have to replace the &lt;code>pip3&lt;/code> command with &lt;code>pip&lt;/code>. If you encounter permissions problem when running these commands, you should probably add &lt;code>--user&lt;/code> to the end of the previous command.&lt;/li>
&lt;/ol>
&lt;h2 id="lauching-jupyter-lab">Lauching Jupyter Lab&lt;/h2>
&lt;div id="sec:intro-lancement">&lt;/div>
&lt;h3 id="with-anaconda-navigator">With Anaconda Navigator&lt;/h3>
&lt;p>If Anaconda or Miniconda has been installed, simply launch Anaconda Navigator and click on the &amp;ldquo;jupyterlab&amp;rdquo; icon:&lt;/p>
&lt;center>&lt;img src="https://paulliautaud.github.io/fig/anaconda.png" style="width:90%;max-width:900px;">&lt;/center>
&lt;h3 id="in-the-command-line">In the command line&lt;/h3>
&lt;p>To run Jupyter Lab from the command line, type &lt;code>jupyter lab&lt;/code> in a terminal. To quit, you have to click on &amp;ldquo;Shutdown&amp;rdquo; in the &amp;ldquo;File&amp;rdquo; menu of the Jupyter Lab window. It is also possible to type &lt;code>Ctrl+C&lt;/code> followed by &lt;code>y&lt;/code> (in English) or &lt;code>o&lt;/code> (in French) in the terminal where the &lt;code>jupyter lab&lt;/code> command was executed.&lt;/p>
&lt;h3 id="online-without-installation">Online without installation&lt;/h3>
&lt;p>For people who cannot or do not want to install Python and the necessary dependencies on their own computer, it is possible to use Jupyter Lab online with GESIS by clicking &lt;a href="https://mybinder.org/v2/gh/paulliautaud/python_stan/HEAD" target="_blank" rel="noopener">here&lt;/a>.
No account is required but documents stored without a user account are automatically deleted so it is imperative to save them on your own computer before leaving. It is also possible to create a user account on GESIS at &lt;a href="https://notebooks.gesis.org/hub/" target="_blank" rel="noopener">https://notebooks.gesis.org/hub/&lt;/a>, which then allows you to save your documents.&lt;/p>
&lt;p>Otherwise, different services offer the possibility to use Jupyter Lab for free after creating an account:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://cocalc.com/" target="_blank" rel="noopener">CoCalc&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://colab.research.google.com/" target="_blank" rel="noopener">Google Colaboratory&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="using-jupyter-lab">Using Jupyter Lab&lt;/h2>
&lt;p>Once Jupyter Lab is launched, the following window should appear in a browser:&lt;/p>
&lt;center>&lt;img src="https://paulliautaud.github.io/fig/jupyter_lab.png" style="width:90%;max-width:900px;">&lt;/center>
&lt;p>Jupyter Lab essentially allows for three types of documents: &lt;strong>notebooks&lt;/strong>, &lt;strong>scripts&lt;/strong> and &lt;strong>terminals&lt;/strong>. A notebook consists of cells that can contain either code or text in Markdown format. The cells can be evaluated interactively on demand, which allows great flexibility. A Python script is simply a text file containing Python instructions. It runs from start to finish and it is not possible to interact with it interactively during its execution (unless it has been explicitly programmed). To execute a python script it is necessary to open a terminal.&lt;/p>
&lt;p>A notebook is composed of cells, which can be of two main types: code cells and text cells, as shown in the following figure.
Text cells can contain LaTeX formulas.&lt;/p>
&lt;center>&lt;img src="https://paulliautaud.github.io/fig/jupyter_lab_2.png" style="width:90%;max-width:900px;">&lt;/center>
&lt;p>Detailed documentation for Jupyter Lab is available &lt;a href="https://jupyterlab.readthedocs.io/" target="_blank" rel="noopener">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Basic commands:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Create a new file: click on the &lt;code>PLUS&lt;/code> button at the top left, then choose the type of file to create.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rename a file: click with the second mouse button on the title of the notebook (either in the tab or in the file list).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Change the cell type: drop-down menu to choose between &amp;ldquo;Code&amp;rdquo; and &amp;ldquo;Markdown&amp;rdquo;.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Execute a cell: combination of &lt;code>SHIFT+ENTER&lt;/code> keys.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run a script: type &lt;code>python scriptname.py&lt;/code> in a terminal to run the script &lt;code>scriptname.py&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Rearrange cells: click and drop.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Juxtaposing tabs: click and drop.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Chapter 1 - Data Structures</title><link>https://paulliautaud.github.io/teaching/python/01_python_basis/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/teaching/python/01_python_basis/</guid><description>&lt;hr>
&lt;p>The associated slides are the following &lt;a href="slides/00_python_pres_slides.html">👨🏼‍🏫&lt;/a>.&lt;/p>
&lt;p>📖 You can run the first pratical &lt;a href="https://mybinder.org/v2/gh/paulliautaud/python_stan/HEAD" target="_blank" rel="noopener">here&lt;/a> or download it &lt;a href="https://paulliautaud.github.io/tp/Structures_données.ipynb" download> there&lt;/a>. &lt;br>
⚠️ In case you directly run it, do save your work locally on your machines, otherwise it will be lost!&lt;/p>
&lt;hr>
&lt;h2 id="tuple">Tuple&lt;/h2>
&lt;p>A &lt;strong>tuple&lt;/strong> is an immutable array data structure in Python with the following characteristics:&lt;/p>
&lt;ul>
&lt;li>can hold any type of data&lt;/li>
&lt;li>can hold different types of data at the same time&lt;/li>
&lt;li>can not be modified
We can generate tuples using curve brackets.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">numpy&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">np&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">math&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">l&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">l&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>Note: ugfheijoksdplzk&lt;/p>
&lt;/blockquote>
&lt;h1 id="1---structures-de-données">1 - Structures de données&lt;/h1>
&lt;div id="ch:structures">&lt;/div>
&lt;p>Pour représenter des structures de données, Python propose quatre types de base: les listes (type &lt;code>list&lt;/code>), les tuples (type &lt;code>tuple&lt;/code>), les ensembles (type &lt;code>set&lt;/code>) et les dictionnaires (type &lt;code>dict&lt;/code>). Le but de ce chapitre est de montrer les différences fondamentales entre ces structures de données et d&amp;rsquo;expliquer à quoi elles sont le plus adaptées. La documentation détaillée sur les structures de données est disponible &lt;a href="https://docs.python.org/fr/3/tutorial/datastructures.html" target="_blank" rel="noopener">ici&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Concepts abordés:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>structures de données (liste, tuple, ensemble, dictionnaire)&lt;/li>
&lt;li>types mutable et immutable&lt;/li>
&lt;li>type hashable&lt;/li>
&lt;li>compréhensions de liste, ensemble et dictionnaire&lt;/li>
&lt;li>suites numériques&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1 id="exercice-11-listes">Exercice 1.1: Listes&lt;/h1>
&lt;div id="exer:structures-listes">&lt;/div>
&lt;p>Une liste est une structure permettant de stocker des éléments hétérogènes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;chaîne&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les listes sont mutables, c&amp;rsquo;est-à-dire qu&amp;rsquo;il est possible d&amp;rsquo;y modifier un élément, d&amp;rsquo;en rajouter un ou d&amp;rsquo;en supprimer un sans avoir à redéfinir toute la liste.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">False&lt;/span> &lt;span class="c1"># remplace True par False&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">append&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;nouveau&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ajoute la chaîne de caractères &amp;#34;nouveau&amp;#34; à la liste&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">insert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">34&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># insère 34 à la place 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># enlève 0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En particulier, il faut faire attention en copiant une liste. Si l&amp;rsquo;on exécute le code suivant:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">list1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list1&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;change&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>alors &lt;code>list0&lt;/code> est aussi modifié et est égal à &lt;code>list1&lt;/code>.
En effet, exécuter &lt;code>list1 = list0&lt;/code> ne crée pas un nouvel objet (dans la mémoire vive de l&amp;rsquo;ordinateur), mais crée simplement une autre variable pointant vers le même objet.
Pour le vérifier, il est possible d&amp;rsquo;utiliser la command &lt;code>id&lt;/code> qui renvoie l&amp;rsquo;identifiant unique d&amp;rsquo;une variable : si deux variables ont le même identifiant, alors elles pointent vers le même objet.
C&amp;rsquo;est le cas avec le code &lt;code>list1 = list0&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="nb">id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Pour créer une vraie copie, il faut utiliser la méthode &lt;code>copy&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">list2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">list0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">copy&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list2&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;rechange&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">list0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>qui ne modifie pas &lt;code>list0&lt;/code>.
À noter qu&amp;rsquo;il est possible de modifier les éléments d&amp;rsquo;une liste à l&amp;rsquo;intérieur d&amp;rsquo;une fonction:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">l&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">l&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">f&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">list0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enfin il est possible de créer des listes à l&amp;rsquo;aide de la compréhension de listes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">list1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="mi">1&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>a)&lt;/strong>
Chercher dans la documentation la syntaxe pour concaténer deux listes.&lt;/p>
&lt;p>&lt;strong>Indication:&lt;/strong>
Voir la documentation &lt;a href="https://docs.python.org/fr/3/library/stdtypes.html#sequence-types-list-tuple-range" target="_blank" rel="noopener">ici&lt;/a>.&lt;/p>
&lt;p>&lt;strong>b)&lt;/strong>
Chercher dans la documentation la syntaxe pour extraire une tranche d&amp;rsquo;une liste, c&amp;rsquo;est-à-dire: si &lt;code>a&lt;/code> est par exemple une liste de longueur 10, retourner les éléments de 6 à 9.&lt;/p>
&lt;p>&lt;strong>Indication:&lt;/strong>
Voir la documentation &lt;a href="https://docs.python.org/fr/3/library/stdtypes.html#sequence-types-list-tuple-range" target="_blank" rel="noopener">ici&lt;/a>.&lt;/p>
&lt;p>&lt;strong>c)&lt;/strong>
Chercher dans la documentation la syntaxe pour retourner la longueur d&amp;rsquo;une liste.&lt;/p>
&lt;p>&lt;strong>d)&lt;/strong>
Écrire une fonction &lt;code>fibonacci(N)&lt;/code> qui retourne la liste des $N\geq 2$ premiers termes de la suite de Fibonacci définie par $u_{n+2} = u_{n+1}+u_n$ avec $u_0=0$ et $u_1=1$.&lt;/p>
&lt;p>&lt;strong>e)&lt;/strong>
Écrire une fonction &lt;code>pascal(N)&lt;/code> qui retourne la $N$-ième ligne du triangle de Pascal:&lt;/p>
&lt;center>&lt;img src="https://python.guillod.org/fig/pascal.png" style="width:90%;max-width:150px;">&lt;/center>
&lt;p>&lt;strong>f)&lt;/strong>
Soit les suites $(u_n)&lt;em>{n\in\mathbb{N}}$ et $(v_n)&lt;/em>{n\in\mathbb{N}}$ définies par $u_0=1$, $v_0=1$, et&lt;/p>
&lt;p>$$
\begin{align*}
u_{n+1} &amp;amp;= u_n + v_n ,, &amp;amp; v_{n+1} &amp;amp;= 2u _n - v_n ,,
\end{align*}
$$&lt;/p>
&lt;p>pour $n\geq0$. Calculer $u_{100}$ et $v_{100}$.&lt;/p>
&lt;p>&lt;strong>Réponse:&lt;/strong>
$u_{100}=v_{100}=717897987691852588770249$&lt;/p>
&lt;p>&lt;strong>g)&lt;/strong>
Écrire une fonction &lt;code>vk(n0,K)&lt;/code>, qui pour deux entiers $n_0$ et $K\geq1$ calcule la suite des valeurs $v_k$ définies par $v_0 = n_0$ et&lt;/p>
&lt;p>$$
v_{k+1}=\begin{cases}
3v_{k}+1 &amp;amp; \text{si $v_{k}$ est impair},\
\frac{v_{k}}{2} &amp;amp; \text{si $v_{k}$ est pair},
\end{cases}
$$&lt;/p>
&lt;p>pour $0 \leq k &amp;lt; K$. Pour $K = 1 000$ et diverses valeurs de $n_0 \in {10, 100, 1 000, 10 000}$, afficher les cinq dernières
valeurs calculées, c&amp;rsquo;est-à-dire $(v_{K-4},v_{K-3},v_{K-2},v_{K-1},v_K)$.&lt;/p>
&lt;p>&lt;strong>Réponse:&lt;/strong>
Les assertions suivantes sont vraies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">vk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">vk&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;!-- --- end exercise --- -->
&lt;!-- --- begin exercise --- -->
&lt;h1 id="exercice-12-tuples">Exercice 1.2: Tuples&lt;/h1>
&lt;div id="exer:structures-tuples">&lt;/div>
&lt;p>Les tuples permettent tout comme les listes de stocker des éléments hétérogènes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">tuple0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;chaîne&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mais au contraire des listes, les tuples ne sont pas mutables. Il n&amp;rsquo;est pas possible d&amp;rsquo;y modifier un élément, d&amp;rsquo;en rajouter un ou d&amp;rsquo;en supprimer un sans redéfinir tout le tuple.
L&amp;rsquo;avantage d&amp;rsquo;un tuple sur une liste est qu&amp;rsquo;il est hashable, ce qui implique qu&amp;rsquo;il peut être utilisé comme clef dans un dictionnaire ou inclus dans un ensemble.&lt;/p>
&lt;p>Une fonction de hachage est une fonction injective permettant de calculer un identifiant unique pour chaque entrée,
et donc de vérifier si deux entrées sont identiques en comparant leurs identifiants, ce qui est beaucoup plus rapide que de comparer toutes les entrées.
Une fonction de hashage ne peut s&amp;rsquo;appliquer que sur des éléments pas mutables car sinon il faudrait modifier l&amp;rsquo;identifiant à chaque modification de l&amp;rsquo;élément.&lt;/p>
&lt;p>Enfin il est possible d&amp;rsquo;affecter des variables à l&amp;rsquo;intérieur d&amp;rsquo;un tuple, par exemple:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">9&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Cela est en particulier très utile pour échanger deux variables sans avoir à utiliser une variable supplémentaire:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>a)&lt;/strong>
Vérifier qu&amp;rsquo;un tuple est bien immutable.&lt;/p>
&lt;p>&lt;strong>b)&lt;/strong>
Définir une fonction &lt;code>mdlast(lst,val)&lt;/code> ayant pour argument une liste de tuples d&amp;rsquo;entiers &lt;code>lst&lt;/code> et un entier &lt;code>val&lt;/code> et retourner la liste de tuples avec le dernier élément de chaque tuple remplacé par &lt;code>val&lt;/code>. Par exemple si &lt;code>lst = [(10, 20), (30, 40, 50, 60), (70, 80, 90)]&lt;/code> alors &lt;code>mdlast(lst,100)&lt;/code> doit retourner &lt;code>[(10, 100), (30, 40, 50, 100), (70, 80, 100)]&lt;/code>.&lt;/p>
&lt;p>&lt;strong>c)&lt;/strong>
Comment convertir un tuple en liste et réciproquement ?&lt;/p>
&lt;h1 id="exercice-13-ensembles">Exercice 1.3: Ensembles&lt;/h1>
&lt;div id="exer:structures-ensembles">&lt;/div>
&lt;p>Les ensembles permettent de stocker des éléments hétérogènes au sens mathématique de la théorie des ensembles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">set0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;chaîne&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Il est possible de tester si un élément appartient à un ensemble:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="s2">&amp;#34;chaîne&amp;#34;&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">set0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;dedans&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les ensembles sont mutables, il est donc possible de rajouter ou retirer un élément d&amp;rsquo;un ensemble:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">set0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">18&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ajoute 18 à l&amp;#39;ensemble&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">set0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># ajoute 0 à l&amp;#39;ensemble (ne fait rien car 0 est déjà dedans)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">set0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;chaîne&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># retire &amp;#34;chaîne de l&amp;#39;ensemble&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En revanche les ensembles ne peuvent contenir que des éléments hashables, c&amp;rsquo;est-à-dire immutables.
La raison est que les ensembles utilisent des &lt;a href="https://fr.wikipedia.org/wiki/Table_de_hachage" target="_blank" rel="noopener">tables de hachage&lt;/a> permettant de calculer très rapidement si un élément est présent dans un ensemble, bien plus rapidement que dans une liste ou un tuple.
En particulier un ensemble ne peut pas contenir un autre ensemble:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">set1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{{&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">},{&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ne">TypeError&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">unhashable&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;set&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>À noter qu&amp;rsquo;il existe également en Python des ensembles immutables &lt;code>frozenset&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">frozenset0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">frozenset&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">5.4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;chaîne&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">True&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Une chaîne de caractères peut être transformée en ensemble:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">set1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;abracadabra&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Comme pour les listes, il est possible de faire des compréhensions d&amp;rsquo;ensembles:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">set2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">x&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;abracadabra&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Dans cet exemple les chaînes de caractères sont automatiquement transformées en ensemble.
À noter que l&amp;rsquo;ensemble vide est défini par &lt;code>set()&lt;/code>.&lt;/p>
&lt;p>&lt;strong>a)&lt;/strong>
Définir une fonction &lt;code>divisible(n)&lt;/code> qui retourne l&amp;rsquo;ensemble des nombres entiers divisibles par &lt;code>n&lt;/code> inférieurs ou égaux à 100.&lt;/p>
&lt;p>&lt;strong>b)&lt;/strong>
Chercher dans la documentation comment faire l&amp;rsquo;intersection, l&amp;rsquo;union, et la différence de deux ensembles. Déterminer les nombres inférieurs ou égaux à 100 qui sont non divisibles par 2 mais divisibles par 3 et 5.&lt;/p>
&lt;p>&lt;strong>Indication:&lt;/strong>
Voir la documentation de &lt;code>set&lt;/code> &lt;a href="https://docs.python.org/fr/3/library/stdtypes.html#set" target="_blank" rel="noopener">ici&lt;/a>.&lt;/p>
&lt;h1 id="exercice-14-dictionnaires">Exercice 1.4: Dictionnaires&lt;/h1>
&lt;div id="exer:structures-dictionnaires">&lt;/div>
&lt;p>Les dictionnaires sont une structure permettant de stocker des éléments hétérogènes indexés par des clefs (elles aussi hétérogènes):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s2">&amp;#34;pommes&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;poires&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Les éléments d&amp;rsquo;un dictionnaire sont accessibles par les clefs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pommes&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Un dictionnaire peut être vu comme un tableau associatif associant à chaque clef une valeur. La liste des clefs et celle des valeurs sont accessibles respectivement avec &lt;code>dict0.keys()&lt;/code> et &lt;code>dict0.values()&lt;/code>.
Les dictionnaires sont mutables, il est donc possible de modifier une association clef-valeur et d&amp;rsquo;en rajouter ou supprimer une:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;pommes&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="c1"># modifie la valeur associée à pommes&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;oranges&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;beaucoup&amp;#34;&lt;/span> &lt;span class="c1"># rajoute oranges comme clef avec la valeur &amp;#34;beaucoup&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">del&lt;/span> &lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;poires&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># supprime le couple clef-valeur associé à poires&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;pommes&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># supprime le couple clef-valeur associé à pommes&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bien qu&amp;rsquo;un dictionnaire soit mutable, les clefs qui le composent doivent être des objets hashables, c&amp;rsquo;est-à-dire immutables.
La raison est que Python utilise une fonction de hashage sur les clefs pour des questions de performance.
Ainsi une liste ou un ensemble ne peuvent pas servir de clefs dans un dictionnaire:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">list0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ne">TypeError&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">unhashable&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;list&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">set0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;retest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="ne">TypeError&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">unhashable&lt;/span> &lt;span class="nb">type&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;set&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>En revanche il est possible d&amp;rsquo;avoir un tuple ou un frozenset comme clef:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">tuple0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict0&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">frozenset0&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;rest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>d&amp;rsquo;où l&amp;rsquo;intérêt des frozensets.
Comme pour les listes et les ensembles, il est possible de faire des compréhensions de dictionnaires:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dict1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="mi">2&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finalement une chose intéressante avec les dictionnaires est l&amp;rsquo;unpaking illustré par l&amp;rsquo;exemple suivant:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">b&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">b&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">**&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>a)&lt;/strong>
Comment définir un dictionnaire vide ?&lt;/p>
&lt;p>&lt;strong>b)&lt;/strong>
Comment concaténer plusieurs dictionnaires entre eux ?&lt;/p>
&lt;p>&lt;strong>c)&lt;/strong>
On considère une liste de mots:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">mots&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Abricot&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Airelle&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Ananas&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Banane&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Cassis&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Cerise&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Citron&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;Clémentine&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Coing&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Datte&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Fraise&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Framboise&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Grenade&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Groseille&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;Kaki&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Kiwi&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Litchi&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Mandarine&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Mangue&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Melon&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Mirabelle&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Nectarine&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>\
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1">&amp;#39;Orange&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Pamplemousse&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Papaye&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Pêche&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Poire&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Pomme&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Prune&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Raisin&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Écrire une fonction &lt;code>position(mots, x, n)&lt;/code> qui retourne la liste des mots ayant le caractère &lt;code>x&lt;/code> comme &lt;code>n&lt;/code>-ième lettre.&lt;/p>
&lt;p>&lt;strong>Réponse:&lt;/strong>
Par exemple &lt;code>position(mots,'e',4)&lt;/code> doit retourner la liste:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;Clémentine&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Datte&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Groseille&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Pêche&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Poire&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Pomme&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;Prune&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>d)&lt;/strong>
En imaginant que la liste des mots soit très longue, alors à chaque évaluation de la fonction &lt;code>position&lt;/code> l&amp;rsquo;ensemble des mots est parcouru, ce qui prend pas mal de temps. Pour améliorer cela, construire un dictionnaire &lt;code>mots_dict&lt;/code> ayant pour clefs les tuples &lt;code>(x,n)&lt;/code> et comme valeurs la liste des mots ayant le caractère &lt;code>x&lt;/code> comme &lt;code>n&lt;/code>-ième lettre, c&amp;rsquo;est-à-dire tel que &lt;code>mots_dict[x,n]&lt;/code> retourne la même chose que &lt;code>position(mots, x , n)&lt;/code> à l&amp;rsquo;ordre près. Ainsi la liste &lt;code>mots&lt;/code> n&amp;rsquo;est parcourue qu&amp;rsquo;une seule fois lors de la construction du dictionnaire et ensuite l&amp;rsquo;évaluation du dictionnaire est extrêmement rapide pour n&amp;rsquo;importe quelle requête.&lt;/p></description></item><item><title>TP1</title><link>https://paulliautaud.github.io/teaching/computational_statistics/01_computational/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/teaching/computational_statistics/01_computational/</guid><description>&lt;p>First pratical with basis tools of R code.&lt;/p>
&lt;h2 id="tuple">Tuple&lt;/h2>
&lt;p>A &lt;strong>tuple&lt;/strong> is an immutable array data structure in Python with the following characteristics:&lt;/p>
&lt;ul>
&lt;li>can hold any type of data&lt;/li>
&lt;li>can hold different types of data at the same time&lt;/li>
&lt;li>can not be modified
We can generate tuples using curve brackets.&lt;/li>
&lt;/ul></description></item><item><title>TP2</title><link>https://paulliautaud.github.io/teaching/computational_statistics/02_computational/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/teaching/computational_statistics/02_computational/</guid><description>&lt;p>Second practical&lt;/p></description></item><item><title>TP3</title><link>https://paulliautaud.github.io/teaching/computational_statistics/03_computational/</link><pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/teaching/computational_statistics/03_computational/</guid><description>&lt;p>Third pratical with basis tools of R code.&lt;/p>
&lt;blockquote>
&lt;p>we will see that fnk,dlfmle&lt;/p>
&lt;/blockquote></description></item><item><title>Gradient Boosting</title><link>https://paulliautaud.github.io/project/gradient_boosting/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/project/gradient_boosting/</guid><description>&lt;p>Le Boosting est une méthode d’apprentissage supervisé consistant à bâtir une prédiction fiable en agrégeant les réponses d’apprenants de base, c’est-à-dire d’estimateurs tout juste meilleurs que le hasard. Cette famille d’algorithmes de machine learning construit séquentiellement des apprenants de base, encore appelés faibles ou weak learners. A chaque itération, le nouvel estimateur favorise son apprentissage sur les erreurs du précédent et s’y ajoute pour finalement obtenir un strong learner. Cette méthode a été particulièrement reconnue avec l’algorithme Adaboost (FREUND, SHAPIRE, 1996). Aujourd’hui encore de nombreux challenges sont remportés par des méthodes similaires comme XGBoost/LightGBM (FELLOUS, 2019) réputées puissantes tant sur des modèles de régression que de classification. Le Gradient Boosting proposé par FRIEDMAN (1999 et 2002) est une interprétation du Boosting comme une descente de gradient dans un espace fonctionnel appliquée à un problème d’optimisation dont la fonction objectif est l’erreur en espérance. Cette observation permet d’appliquer la méthode pour un large choix de fonctions de perte comme par exemple l’erreur quadratique en régression ou la fonction logit en classification. Considérons un exemple de weak learner qui constituera notre apprenant de base tout le long de ce cours : l’arbre décisionnel. S’il est peu profond, il est particulièrement simple à mettre en oeuvre et interprétable, en revanche sa pertinence est faible. Comment améliorer ses performances? Augmenter le nombre de noeuds est peu concluant car l’arbre souffre alors d’une variance trop forte. Les méthodes d’agrégation proposent différentes solutions effectives, en générant de multiples versions d’un arbre avant de les combiner. Disposant d’un unique jeu de données, il est alors nécessaire de le perturber pour obtenir des arbres dont les réponses sont différentes mais cohérentes. C’est ce que BREIMAN dénomme perturbing and combining (voir [1]). Dans cet esprit, le Bagging construit chaque arbre à partir d’un échantillon obtenu par bootstrapping : tirage uniforme et avec remise de même taille que le jeu d’entraînement. L’algorithme renvoie la moyenne de la collection d’arbres, estimateur plus robuste, sa variance étant diminuée. Les Forêts aléatoires, procèdent selon le même principe mais les phases d’apprentissage sont réalisées sur des souséchantillons sans remise. La dépendance entre chaque arbre est alors plus faible et par conséquent la variance de leur moyenne également et la réponse plus fiable encore. Venons en au Boosting connu pour surpasser les performances du Bagging et des Forêts alétoires. Comme chaque nouvel arbre apprend des erreurs du précédent et s’y agrège, on peut voir cela comme une diminution du biais. La variance est également améliorée par cet algorithme. Dans [2], il nous est introduit l’algorithme Stochastic Gradient Boosting en injectant de l’aléa par sous échantillonage dans le Grandient Boosting. Les résultats de prédictions peuvent gagner en précision et le coût de calcul est allégé.&lt;/p>
&lt;p>On pourra notamment se référer à ce &lt;a href="https://colab.research.google.com/drive/1JtKMDbNEugHlBmCpFDAPcOk3zs8e2MGa?usp=sharing" target="_blank" rel="noopener">notebook&lt;/a>.&lt;/p>
&lt;h1 id="key-references">Key references&lt;/h1>
&lt;p>&lt;a id="1" href="https://www.researchgate.net/publication/2422419_Bias_Variance_And_Arcing_Classifiers">[1]&lt;/a> Breiman, Leo. (2000). Bias, Variance , And Arcing Classifiers. Technical Report 460, Statistics Department, University of California &lt;br>
&lt;a id="2" href="https://www.researchgate.net/publication/222573328_Stochastic_Gradient_Boosting">[2]&lt;/a> Friedman, Jerome. (2002). Stochastic Gradient Boosting. Computational Statistics &amp;amp; Data Analysis.&lt;/p></description></item><item><title>ViTGAN</title><link>https://paulliautaud.github.io/project/vitgan/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/project/vitgan/</guid><description>&lt;p>A modular Pytorch Implementation of ViTGAN based on &lt;a href="https://arxiv.org/abs/2107.04589v1" target="_blank" rel="noopener">https://arxiv.org/abs/2107.04589v1&lt;/a>&lt;br>
The goal of this projet is to provide a comprehensive framework to experiment with the ViTGAN architechture.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>The main file on the provided code contains a simple example using MNIST, which can be trained relatively quickly.
All hyper parameters of the model are specified in the &lt;em>.json&lt;/em> files.
More details are posted on the project link.&lt;/p>
&lt;h2 id="contributors">Contributors&lt;/h2>
&lt;p>&lt;a href="https://github.com/2ailesB" target="_blank" rel="noopener">Lise Le Boudec&lt;/a>, &lt;a href="https://github.com/Nicolivain" target="_blank" rel="noopener">Nicolas Olivain&lt;/a>, &lt;a href="https://github.com/paulliautaud" target="_blank" rel="noopener">Paul Liautaud&lt;/a>&lt;/p>
&lt;h2 id="key-references">Key References&lt;/h2>
&lt;p>&lt;a id="1" href="https://arxiv.org/abs/2107.04589">[1]&lt;/a> ViTGAN: Training GANs with Vision Transformers, Kwonjoon Lee, Huiwen Chang, Lu Jiang, Han Zhang, Zhuowen Tu, Ce Liu. Jul-2021&lt;br>
&lt;a id="2" href="https://arxiv.org/abs/2010.11929">[2]&lt;/a> An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale, Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby Oct-2020&lt;br>
&lt;a id="3" href="https://arxiv.org/abs/2006.04710">[3]&lt;/a> The Lipschitz Constant of Self-Attention, Hyunjik Kim, George Papamakarios, Andriy Mnih Jun-2020&lt;br>
&lt;a id="4" href="https://arxiv.org/abs/1706.03762">[4]&lt;/a> Attention Is All You Need, Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser, Illia Polosukhin Jun-2017&lt;br>
&lt;a id="5" href="https://arxiv.org/abs/2107.04589v1">[5]&lt;/a> Generative Adversarial Networks, Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, Yoshua Bengio Jun-2014&lt;/p>
&lt;h2 id="see-also">See also&lt;/h2>
&lt;p>One can check this &lt;a href="https://github.com/wilile26811249/ViTGAN" target="_blank" rel="noopener">repository&lt;/a> for a more minimalistic implementation.&lt;/p>
&lt;p>Help us with a
&lt;i class="fas fa-star pr-1 fa-fw">&lt;/i> on our &lt;a href="https://github.com/Nicolivain/ViTGAN" target="_blank" rel="noopener">repository&lt;/a>.&lt;/p></description></item><item><title>Kernel Random Forest</title><link>https://paulliautaud.github.io/project/kerf/</link><pubDate>Wed, 15 Dec 2021 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/project/kerf/</guid><description>&lt;h1 id="kerf">KeRF&lt;/h1>
&lt;p>Les forêts aléatoires introduites par Leo Breiman au début des années 2000 sont une méthode de classification et de régression par apprentissage supervisé. L&amp;rsquo;approche repose sur un principe simple mais puissant, &amp;ldquo;diviser pour mieux régner&amp;rdquo; : faire plusieurs sous-échantillonnages des données, construire un arbre de décision pour chaque sous-ensemble selon un paramètre aléatoire, agréger les réponses pour obtenir la prédiction finale. Cette stratégie affiche d&amp;rsquo;excellents résultats dans divers domaines appliqués, pour en nommer quelques-uns : bio-informatique, économétrie ou encore reconnaissance d&amp;rsquo;objets 3D. La robustesse des forêts aléatoires dans des problèmes de très grande dimension associée à leur simplicité pratique (peu de paramètres sont à ajuster) en ont fait une méthode populaire. Ce succès contraste avec le peu de résultats théoriques présents dans la littérature. Les forêts demeurent une question mathématique ouverte, ce sont des objets complexes à analyser. Dans le cadre d&amp;rsquo;un problème de régression, un objectif peut être d&amp;rsquo;établir le lien entre les forêts aléatoires et des estimateurs à noyau obtenus après une légère modification de leur définition. Cette approche permet d&amp;rsquo;obtenir de nouveaux estimateurs nommés KeRF (&lt;em>Kernel Random Forest&lt;/em>), qui satisfont une certaine proximité aux forêts aléatoires (dans certains cas), tout en ouvrant des perspectives d&amp;rsquo;analyses mathématiques plus profondes.&lt;/p>
&lt;h1 id="xp">XP&lt;/h1>
&lt;p>Pour cette section, on pourra notamment se référer à ce &lt;a href="https://colab.research.google.com/drive/1zsIzj7po_NR8CnAsaBhdP--49b3yIdTj?usp=sharing" target="_blank" rel="noopener">notebook&lt;/a>.&lt;/p>
&lt;p>Une comparaison entre KeRF centré, RF centré et RF Breiman évalués sur 2 modèles :&lt;/p>
&lt;ul>
&lt;li>Modèle 1 :&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/90805180/148874839-3360690f-7d34-49d6-b31c-f504a5dd5516.jpg" alt="Model_1" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;ul>
&lt;li>Modèle 2 :&lt;/li>
&lt;/ul>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/90805180/148874841-38b3f2ad-19db-43e9-aa90-5be27eb57b84.jpg" alt="Model_2" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>On peut également représenter 4 arbres centrés opérant sur un jeu de données indépendantes et identiquement distribuées selon une loi uniforme $\mathcal{U}([0;1]^2)$ :&lt;/p>
&lt;p>
&lt;figure >
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://user-images.githubusercontent.com/90805180/148701851-b73ff73e-f9a6-4506-87fb-c3e3bc601437.jpg" alt="Pathos_example" loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;/figure>
&lt;/p>
&lt;p>&lt;em>Contributions :&lt;/em> Laure Ferraris, Paul Liautaud&lt;/p></description></item><item><title>Brownian Motion</title><link>https://paulliautaud.github.io/project/brownian_motion/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/project/brownian_motion/</guid><description/></item><item><title>Welcome to Wowchemy, the website builder for Hugo</title><link>https://paulliautaud.github.io/post/getting-started/</link><pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/post/getting-started/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;ol>
&lt;li>The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li>
&lt;li>The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong>no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong> and having &lt;strong>flexibility to later add even deeper personalization with HTML and CSS&lt;/strong>&lt;/li>
&lt;li>You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li>
&lt;/ol>
&lt;figure id="figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device">
&lt;div class="d-flex justify-content-center">
&lt;div class="w-100" >&lt;img src="https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png" alt="The template is mobile first with a responsive design to ensure that your site looks stunning on every device." loading="lazy" data-zoomable />&lt;/div>
&lt;/div>&lt;figcaption>
The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
&lt;/figcaption>&lt;/figure>
&lt;h2 id="get-started">Get Started&lt;/h2>
&lt;ul>
&lt;li>👉 &lt;a href="https://wowchemy.com/templates/" target="_blank" rel="noopener">&lt;strong>Create a new site&lt;/strong>&lt;/a>&lt;/li>
&lt;li>📚 &lt;a href="https://wowchemy.com/docs/" target="_blank" rel="noopener">&lt;strong>Personalize your site&lt;/strong>&lt;/a>&lt;/li>
&lt;li>💬 &lt;a href="https://discord.gg/z8wNYzb" target="_blank" rel="noopener">Chat with the &lt;strong>Wowchemy community&lt;/strong>&lt;/a> or &lt;a href="https://discourse.gohugo.io" target="_blank" rel="noopener">&lt;strong>Hugo community&lt;/strong>&lt;/a>&lt;/li>
&lt;li>🐦 Twitter: &lt;a href="https://twitter.com/wowchemy" target="_blank" rel="noopener">@wowchemy&lt;/a> &lt;a href="https://twitter.com/GeorgeCushen" target="_blank" rel="noopener">@GeorgeCushen&lt;/a> &lt;a href="https://twitter.com/search?q=%23MadeWithWowchemy&amp;amp;src=typed_query" target="_blank" rel="noopener">#MadeWithWowchemy&lt;/a>&lt;/li>
&lt;li>💡 &lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/issues" target="_blank" rel="noopener">Request a &lt;strong>feature&lt;/strong> or report a &lt;strong>bug&lt;/strong> for &lt;em>Wowchemy&lt;/em>&lt;/a>&lt;/li>
&lt;li>⬆️ &lt;strong>Updating Wowchemy?&lt;/strong> View the &lt;a href="https://wowchemy.com/docs/hugo-tutorials/update/" target="_blank" rel="noopener">Update Tutorial&lt;/a> and &lt;a href="https://wowchemy.com/updates/" target="_blank" rel="noopener">Release Notes&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="crowd-funded-open-source-software">Crowd-funded open-source software&lt;/h2>
&lt;p>To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p>
&lt;h3 id="-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans">&lt;a href="https://wowchemy.com/plans/" target="_blank" rel="noopener">❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a>&lt;/h3>
&lt;p>As a token of appreciation for sponsoring, you can &lt;strong>unlock &lt;a href="https://wowchemy.com/plans/" target="_blank" rel="noopener">these&lt;/a> awesome rewards and extra features 🦄✨&lt;/strong>&lt;/p>
&lt;h2 id="ecosystem">Ecosystem&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://github.com/wowchemy/hugo-academic-cli" target="_blank" rel="noopener">Hugo Academic CLI&lt;/a>:&lt;/strong> Automatically import publications from BibTeX&lt;/li>
&lt;/ul>
&lt;h2 id="inspiration">Inspiration&lt;/h2>
&lt;p>&lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Check out the latest &lt;strong>demo&lt;/strong>&lt;/a> of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href="https://wowchemy.com/user-stories/" target="_blank" rel="noopener">view the &lt;strong>showcase&lt;/strong>&lt;/a> of personal, project, and business sites.&lt;/p>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Page builder&lt;/strong> - Create &lt;em>anything&lt;/em> with &lt;a href="https://wowchemy.com/docs/page-builder/" target="_blank" rel="noopener">&lt;strong>widgets&lt;/strong>&lt;/a> and &lt;a href="https://wowchemy.com/docs/content/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>elements&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Edit any type of content&lt;/strong> - Blog posts, publications, talks, slides, projects, and more!&lt;/li>
&lt;li>&lt;strong>Create content&lt;/strong> in &lt;a href="https://wowchemy.com/docs/content/writing-markdown-latex/" target="_blank" rel="noopener">&lt;strong>Markdown&lt;/strong>&lt;/a>, &lt;a href="https://wowchemy.com/docs/import/jupyter/" target="_blank" rel="noopener">&lt;strong>Jupyter&lt;/strong>&lt;/a>, or &lt;a href="https://wowchemy.com/docs/install-locally/" target="_blank" rel="noopener">&lt;strong>RStudio&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Plugin System&lt;/strong> - Fully customizable &lt;a href="https://wowchemy.com/docs/customization/" target="_blank" rel="noopener">&lt;strong>color&lt;/strong> and &lt;strong>font themes&lt;/strong>&lt;/a>&lt;/li>
&lt;li>&lt;strong>Display Code and Math&lt;/strong> - Code highlighting and &lt;a href="https://en.wikibooks.org/wiki/LaTeX/Mathematics" target="_blank" rel="noopener">LaTeX math&lt;/a> supported&lt;/li>
&lt;li>&lt;strong>Integrations&lt;/strong> - &lt;a href="https://analytics.google.com" target="_blank" rel="noopener">Google Analytics&lt;/a>, &lt;a href="https://disqus.com" target="_blank" rel="noopener">Disqus commenting&lt;/a>, Maps, Contact Forms, and more!&lt;/li>
&lt;li>&lt;strong>Beautiful Site&lt;/strong> - Simple and refreshing one page design&lt;/li>
&lt;li>&lt;strong>Industry-Leading SEO&lt;/strong> - Help get your website found on search engines and social media&lt;/li>
&lt;li>&lt;strong>Media Galleries&lt;/strong> - Display your images and videos with captions in a customizable gallery&lt;/li>
&lt;li>&lt;strong>Mobile Friendly&lt;/strong> - Look amazing on every screen with a mobile friendly version of your site&lt;/li>
&lt;li>&lt;strong>Multi-language&lt;/strong> - 34+ language packs including English, 中文, and Português&lt;/li>
&lt;li>&lt;strong>Multi-user&lt;/strong> - Each author gets their own profile page&lt;/li>
&lt;li>&lt;strong>Privacy Pack&lt;/strong> - Assists with GDPR&lt;/li>
&lt;li>&lt;strong>Stand Out&lt;/strong> - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li>
&lt;li>&lt;strong>One-Click Deployment&lt;/strong> - No servers. No databases. Only files.&lt;/li>
&lt;/ul>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;p>Wowchemy and its templates come with &lt;strong>automatic day (light) and night (dark) mode&lt;/strong> built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href="https://academic-demo.netlify.com/" target="_blank" rel="noopener">Demo&lt;/a> to see it in action! Day/night mode can also be disabled by the site admin in &lt;code>params.toml&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/docs/customization" target="_blank" rel="noopener">Choose a stunning &lt;strong>theme&lt;/strong> and &lt;strong>font&lt;/strong>&lt;/a> for your site. Themes are fully customizable.&lt;/p>
&lt;h2 id="license">License&lt;/h2>
&lt;p>Copyright 2016-present &lt;a href="https://georgecushen.com" target="_blank" rel="noopener">George Cushen&lt;/a>.&lt;/p>
&lt;p>Released under the &lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md" target="_blank" rel="noopener">MIT&lt;/a> license.&lt;/p></description></item><item><title>Slides</title><link>https://paulliautaud.github.io/slides/example/</link><pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/slides/example/</guid><description>&lt;h1 id="create-slides-in-markdown-with-wowchemy">Create slides in Markdown with Wowchemy&lt;/h1>
&lt;p>&lt;a href="https://wowchemy.com/" target="_blank" rel="noopener">Wowchemy&lt;/a> | &lt;a href="https://owchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>Efficiently write slides in Markdown&lt;/li>
&lt;li>3-in-1: Create, Present, and Publish your slides&lt;/li>
&lt;li>Supports speaker notes&lt;/li>
&lt;li>Mobile friendly slides&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="controls">Controls&lt;/h2>
&lt;ul>
&lt;li>Next: &lt;code>Right Arrow&lt;/code> or &lt;code>Space&lt;/code>&lt;/li>
&lt;li>Previous: &lt;code>Left Arrow&lt;/code>&lt;/li>
&lt;li>Start: &lt;code>Home&lt;/code>&lt;/li>
&lt;li>Finish: &lt;code>End&lt;/code>&lt;/li>
&lt;li>Overview: &lt;code>Esc&lt;/code>&lt;/li>
&lt;li>Speaker notes: &lt;code>S&lt;/code>&lt;/li>
&lt;li>Fullscreen: &lt;code>F&lt;/code>&lt;/li>
&lt;li>Zoom: &lt;code>Alt + Click&lt;/code>&lt;/li>
&lt;li>&lt;a href="https://revealjs.com/pdf-export/" target="_blank" rel="noopener">PDF Export&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="code-highlighting">Code Highlighting&lt;/h2>
&lt;p>Inline code: &lt;code>variable&lt;/code>&lt;/p>
&lt;p>Code block:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">porridge&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;blueberry&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">porridge&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;blueberry&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Eating...&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="math">Math&lt;/h2>
&lt;p>In-line math: $x + y = z$&lt;/p>
&lt;p>Block math:&lt;/p>
&lt;p>$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p>
&lt;hr>
&lt;h2 id="fragments">Fragments&lt;/h2>
&lt;p>Make content appear incrementally&lt;/p>
&lt;pre tabindex="0">&lt;code>{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code>&lt;/pre>&lt;p>Press &lt;code>Space&lt;/code> to play!&lt;/p>
&lt;span class="fragment " >
One
&lt;/span>
&lt;span class="fragment " >
&lt;strong>Two&lt;/strong>
&lt;/span>
&lt;span class="fragment " >
Three
&lt;/span>
&lt;hr>
&lt;p>A fragment can accept two optional parameters:&lt;/p>
&lt;ul>
&lt;li>&lt;code>class&lt;/code>: use a custom style (requires definition in custom CSS)&lt;/li>
&lt;li>&lt;code>weight&lt;/code>: sets the order in which a fragment appears&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="speaker-notes">Speaker Notes&lt;/h2>
&lt;p>Add speaker notes to your presentation&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{% speaker_note %}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Only the speaker can read these notes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">-&lt;/span> Press &lt;span class="sb">`S`&lt;/span> key to view
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{% /speaker_note %}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Press the &lt;code>S&lt;/code> key to view the speaker notes!&lt;/p>
&lt;aside class="notes">
&lt;ul>
&lt;li>Only the speaker can read these notes&lt;/li>
&lt;li>Press &lt;code>S&lt;/code> key to view&lt;/li>
&lt;/ul>
&lt;/aside>
&lt;hr>
&lt;h2 id="themes">Themes&lt;/h2>
&lt;ul>
&lt;li>black: Black background, white text, blue links (default)&lt;/li>
&lt;li>white: White background, black text, blue links&lt;/li>
&lt;li>league: Gray background, white text, blue links&lt;/li>
&lt;li>beige: Beige background, dark text, brown links&lt;/li>
&lt;li>sky: Blue background, thin dark text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;ul>
&lt;li>night: Black background, thick white text, orange links&lt;/li>
&lt;li>serif: Cappuccino background, gray text, brown links&lt;/li>
&lt;li>simple: White background, black text, blue links&lt;/li>
&lt;li>solarized: Cream-colored background, dark green text, blue links&lt;/li>
&lt;/ul>
&lt;hr>
&lt;section data-noprocess data-shortcode-slide
data-background-image="/media/boards.jpg"
>
&lt;h2 id="custom-slide">Custom Slide&lt;/h2>
&lt;p>Customize the slide style and background&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">background-image&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;/media/boards.jpg&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">background-color&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#0000FF&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">{{&lt;span class="p">&amp;lt;&lt;/span> &lt;span class="nt">slide&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;my-style&amp;#34;&lt;/span> &lt;span class="p">&amp;gt;&lt;/span>}}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h2 id="custom-css-example">Custom CSS Example&lt;/h2>
&lt;p>Let&amp;rsquo;s make headers navy colored.&lt;/p>
&lt;p>Create &lt;code>assets/css/reveal_custom.css&lt;/code> with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h1&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h2&lt;/span>&lt;span class="o">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nc">reveal&lt;/span> &lt;span class="nt">section&lt;/span> &lt;span class="nt">h3&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">navy&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h1 id="questions">Questions?&lt;/h1>
&lt;p>&lt;a href="https://github.com/wowchemy/wowchemy-hugo-modules/discussions" target="_blank" rel="noopener">Ask&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://wowchemy.com/docs/managing-content/#create-slides" target="_blank" rel="noopener">Documentation&lt;/a>&lt;/p></description></item><item><title>An example conference paper</title><link>https://paulliautaud.github.io/publication/example/</link><pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/publication/example/</guid><description>&lt;div class="alert alert-note">
&lt;div>
Click the &lt;em>Cite&lt;/em> button above to demo the feature to enable visitors to import publication metadata into their reference management software.
&lt;/div>
&lt;/div>
&lt;div class="alert alert-note">
&lt;div>
Create your slides in Markdown - click the &lt;em>Slides&lt;/em> button to check out the example.
&lt;/div>
&lt;/div>
&lt;p>Supplementary notes can be added here, including &lt;a href="https://wowchemy.com/docs/writing-markdown-latex/" target="_blank" rel="noopener">code, math, and images&lt;/a>.&lt;/p></description></item><item><title/><link>https://paulliautaud.github.io/admin/config.yml</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://paulliautaud.github.io/admin/config.yml</guid><description/></item></channel></rss>