[{"authors":null,"categories":null,"content":" I am a PhD student in Statistical/Machine Learning in the LPSM lab of Sorbonne University, in Paris. My research activity is supervised by Pierre Gaillard (Research. at INRIA, Grenoble) \u0026amp; Olivier Wintenberger (Prof. at Sorbonne University).\nMy main work focuses on sequential algorithms \u0026amp; online learning theory.\n","date":1607817600,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1607817600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am a PhD student in Statistical/Machine Learning in the LPSM lab of Sorbonne University, in Paris. My research activity is supervised by Pierre Gaillard (Research. at INRIA, Grenoble) \u0026 Olivier Wintenberger (Prof.","tags":null,"title":"Paul Liautaud","type":"authors"},{"authors":null,"categories":null,"content":"This course will bring you some basics in Python blabla\nContent Preliminaries – Set up and brief motivation of using Python.\nData Structures Lists Tuples Sets Dictionaries Numpy arrays Pandas DataFrames Pyspark DataFrames ","date":1656460800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1656460800,"objectID":"636a3c915f7d37d4489b3f22d9785b3b","permalink":"https://paulliautaud.github.io/teaching/python/","publishdate":"2022-06-29T00:00:00Z","relpermalink":"/teaching/python/","section":"teaching","summary":"This course will bring you some basics in Python blabla\n","tags":null,"title":"Python ECG","type":"book"},{"authors":null,"categories":null,"content":"This page is dedicated to Master 1 Maths \u0026amp; Applications students for the Numerical Probabilities \u0026amp; Computational Statistics course.\nContent TP1 TP2 TP3 ","date":1656374400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1656374400,"objectID":"9b61c9f7aeb82ab5dbde4209020dcd34","permalink":"https://paulliautaud.github.io/teaching/computational_statistics/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/computational_statistics/","section":"teaching","summary":"This page is dedicated to Master 1 Maths \u0026 Applications students for the Numerical Probabilities \u0026 Computational Statistics course.\n","tags":null,"title":"Computational Statistics","type":"book"},{"authors":null,"categories":null,"content":"This page is dedicated to Master 1 Actuarial students for the time series course.\nThe main page of the course is on Time Series Wintenberger. But here will be posted some news and the course progression. Stay tuned !\nContent","date":1656374400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1656374400,"objectID":"9758ad312712bdba69ed1223dcbd9ac1","permalink":"https://paulliautaud.github.io/teaching/time_series/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/time_series/","section":"teaching","summary":"This page is dedicated to Master 1 Actuarial students for the time series course.\n","tags":null,"title":"Time Series","type":"book"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://paulliautaud.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"This section will first present what Python is. Then, it will show and demistify the main steps to set Python and Anaconda environment on any laptop.\nFirst, why Python ? Python is a general-purpose interpreted programming language which has the particularity of being very readable and pragmatic. It has a very large base of external modules, especially scientific ones, which makes it particularly attractive for programming mathematical problems. The fact that Python is an interpreted language makes it slower than compiled languages, but on the other hand it ensures a great speed of development which allows the human to work a little less while the computer will have to work a little more. This particularity has made Python one of the main programming languages used by scientists.\nPrerequisites The prerequisite would be to know the basics of the Python language, for example as taught in the last year’s course.\nPeople who are not familiar with the basics of the Python language should take the MOOC (Massive Open Online Course) Python 3 : des fondamentaux aux concepts avancés du langage available on the website of France Université Numérique. In case access is restricted, the videos of the MOOC are available on YouTube.\nIn addition, the realization of the exercises requires access to a computer or an online service with Python 3.6 (or more recent) completed by the following modules: numpy, scipy, sympy, matplotlib, numba, networkx and pandas. The use of a code editor allowing writing in Python is also highly recommended. It is suggested here to use Jupyter Lab, which allows both writing interactive notebooks and scripts and also adding one’s own solutions below the statements, which is very convenient. It is not necessary to use Jupyter Lab, other environments are also suitable, such as Spyder or Jupyter Notebook.\nThe following sections describe how to install and run the Python environment or use it online without installation.\nDocumentation It is generally not useful (nor desirable) to know all the functions and subtleties of the Python language for occasional use. On the other hand, it is essential to know how to use the documentation effectively. The official documentation is available at https://docs.python.org/. The language and version can be selected on the top left. It is highly recommended to look at how the documentation is written and learn how to use it.\nInstallation Those unable or unwilling to install Python can go directly to the 1.5 Launching Jupyter Lab section for alternatives available online without installation.\nThere are essentially four ways to install Python and the modules required to run the exercises:\nAnaconda is a complete Python distribution, i.e. it directly installs a very large quantity of modules (much more than we actually need). The advantage of this installation is that it is very simple; the disadvantage is that it takes up a lot of disk space. This is the preferred method if you are running Windows or MacOS and do not have disk space problems.\nMiniconda is a light version of Anaconda, which installs only the base by default. The advantage is that it takes up little disk space, but it requires an additional action to install the modules needed. This is the preferred method if you are on Windows or MacOS and have little disk space available.\nLinux repositories: Most Linux distributions allow you to install Python and the basic modules directly from the package repositories that come with them. This is the preferred method under Linux.\nPip is a package manager for Python. This is the preferred method to add a module if Python is already installed by your operating system, and this module is not included in the packages of your distribution. This method allows a more fine and advanced management of installed modules than what is proposed with the previous methods.\nInstallation with Anaconda The easiest way to install Python 3 and all necessary dependencies on Windows and MacOS is to install Anaconda. The disadvantage of Anaconda is that it takes a lot of disk space to install because so many modules are installed by default. Detailed installation procedures according to each operating system are described at: https://docs.anaconda.com/anaconda/install/. In summary the installation procedure is as follows:\nDownload Anaconda for Python 3 at: https://www.anaconda.com/products/individual#Downloads.\nDouble-click on the downloaded file to start the installation of Anaconda, then follow the installation procedure (it is not necessary to install VS Code).\nOnce the installation is complete, launch Anaconda Navigator from the start menu or from the list of applications.\nInstallation with Miniconda La distribution Miniconda présente l’avantage sur Anaconda de prendre peu d’espace disque, au prix de devoir installer les modules nécessaires manuellement. La procédure d’installation rapide est la suivante:\nTélécharger Miniconda pour Python 3 à l’adresse: https://docs.conda.io/miniconda.html. …","date":1656374400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"5a9e7ad36f8850633cb59c4de27e1eb1","permalink":"https://paulliautaud.github.io/teaching/python/00_preliminaries/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/python/00_preliminaries/","section":"teaching","summary":"This section will first present what Python is. Then, it will show and demistify the main steps to set Python and Anaconda environment on any laptop.\n","tags":["Python","Basics","Tutorial"],"title":"Chapter 0 - Preliminaries","type":"book"},{"authors":null,"categories":null,"content":"The associated slides are the following :\nYou can run the first pratical here or download it there tp In case you directly run it, do save your work locally on your machines, otherwise it will be lost!\nTuple A tuple is an immutable array data structure in Python with the following characteristics:\ncan hold any type of data can hold different types of data at the same time can not be modified We can generate tuples using curve brackets. Theorem 1 (of me).\nThis theorem proves that covfefe. Proof.\nThe proof is very good. I like proof. I have big proof. import numpy as np import math l = [] for i in range(10): l.append(i) print(l) Note: ugfheijoksdplzk\nL’entier des chapitres est disponible au format HTML et PDF. Ce notebook peut également être exécuté sur GESIS.\n1 - Structures de données Pour représenter des structures de données, Python propose quatre types de base: les listes (type list), les tuples (type tuple), les ensembles (type set) et les dictionnaires (type dict). Le but de ce chapitre est de montrer les différences fondamentales entre ces structures de données et d’expliquer à quoi elles sont le plus adaptées. La documentation détaillée sur les structures de données est disponible ici.\nConcepts abordés:\nstructures de données (liste, tuple, ensemble, dictionnaire) types mutable et immutable type hashable compréhensions de liste, ensemble et dictionnaire suites numériques Exercice 1.1: Listes Une liste est une structure permettant de stocker des éléments hétérogènes:\nlist0 = [0, 5.4, \u0026#34;chaîne\u0026#34;, True] Les listes sont mutables, c’est-à-dire qu’il est possible d’y modifier un élément, d’en rajouter un ou d’en supprimer un sans avoir à redéfinir toute la liste.\nlist0[3] = False # remplace True par False list0.append(\u0026#34;nouveau\u0026#34;) # ajoute la chaîne de caractères \u0026#34;nouveau\u0026#34; à la liste list0.insert(2, 34) # insère 34 à la place 2 list0.remove(0) # enlève 0 En particulier, il faut faire attention en copiant une liste. Si l’on exécute le code suivant:\nlist1 = list0 list1[2] = \u0026#34;change\u0026#34; list0 alors list0 est aussi modifié et est égal à list1. En effet, exécuter list1 = list0 ne crée pas un nouvel objet (dans la mémoire vive de l’ordinateur), mais crée simplement une autre variable pointant vers le même objet. Pour le vérifier, il est possible d’utiliser la command id qui renvoie l’identifiant unique d’une variable : si deux variables ont le même identifiant, alors elles pointent vers le même objet. C’est le cas avec le code list1 = list0:\nid(list0) == id(list1) Pour créer une vraie copie, il faut utiliser la méthode copy:\nlist2 = list0.copy() list2[2] = \u0026#34;rechange\u0026#34; list0 qui ne modifie pas list0. À noter qu’il est possible de modifier les éléments d’une liste à l’intérieur d’une fonction:\ndef f(l): l[0] = 0 f(list0) Enfin il est possible de créer des listes à l’aide de la compréhension de listes:\nlist1 = [2*i+1 for i in range(10)] a) Chercher dans la documentation la syntaxe pour concaténer deux listes.\nIndication: Voir la documentation ici.\nb) Chercher dans la documentation la syntaxe pour extraire une tranche d’une liste, c’est-à-dire: si a est par exemple une liste de longueur 10, retourner les éléments de 6 à 9.\nIndication: Voir la documentation ici.\nc) Chercher dans la documentation la syntaxe pour retourner la longueur d’une liste.\nd) Écrire une fonction fibonacci(N) qui retourne la liste des $N\\geq 2$ premiers termes de la suite de Fibonacci définie par $u_{n+2} = u_{n+1}+u_n$ avec $u_0=0$ et $u_1=1$.\ne) Écrire une fonction pascal(N) qui retourne la $N$-ième ligne du triangle de Pascal:\nf) Soit les suites $(u_n){n\\in\\mathbb{N}}$ et $(v_n){n\\in\\mathbb{N}}$ définies par $u_0=1$, $v_0=1$, et\n$$ \\begin{align*} u_{n+1} \u0026amp;= u_n + v_n ,, \u0026amp; v_{n+1} \u0026amp;= 2u _n - v_n ,, \\end{align*} $$\npour $n\\geq0$. Calculer $u_{100}$ et $v_{100}$.\nRéponse: $u_{100}=v_{100}=717897987691852588770249$\ng) Écrire une fonction vk(n0,K), qui pour deux entiers $n_0$ et $K\\geq1$ calcule la suite des valeurs $v_k$ définies par $v_0 = n_0$ et\n$$ v_{k+1}=\\begin{cases} 3v_{k}+1 \u0026amp; \\text{si $v_{k}$ est impair},\\ \\frac{v_{k}}{2} \u0026amp; \\text{si $v_{k}$ est pair}, \\end{cases} $$\npour $0 \\leq k \u0026lt; K$. Pour $K = 1 000$ et diverses valeurs de $n_0 \\in {10, 100, 1 000, 10 000}$, afficher les cinq dernières valeurs calculées, c’est-à-dire $(v_{K-4},v_{K-3},v_{K-2},v_{K-1},v_K)$.\nRéponse: Les assertions suivantes sont vraies:\nvk(10,1000) == [1, 4, 2, 1, 4] vk(100,1000) == [2, 1, 4, 2, 1] vk(1000,1000) == [1, 4, 2, 1, 4] vk(10000,1000) == [4, 2, 1, 4, 2] Exercice 1.2: Tuples Les tuples permettent tout comme les listes de stocker des éléments hétérogènes:\ntuple0 = (0, 5.4, \u0026#34;chaîne\u0026#34;, True) Mais au contraire des listes, les tuples ne sont pas mutables. Il n’est pas possible d’y modifier un élément, d’en rajouter un ou d’en supprimer un sans redéfinir tout le tuple. L’avantage d’un tuple sur une liste est qu’il est hashable, ce qui implique qu’il peut être utilisé comme clef dans un dictionnaire ou inclus dans un ensemble.\nUne fonction de hachage est une fonction injective …","date":1656374400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"9a4a4258e97be6f535f1f0241b72d0e5","permalink":"https://paulliautaud.github.io/teaching/python/01_python_basis/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/python/01_python_basis/","section":"teaching","summary":"The associated slides are the following :\nYou can run the first pratical here or download it there tp In case you directly run it, do save your work locally on your machines, otherwise it will be lost!","tags":["Python","Basics"],"title":"Chapter 1 - Data Structures","type":"book"},{"authors":null,"categories":null,"content":"First pratical with basis tools of R code.\nTuple A tuple is an immutable array data structure in Python with the following characteristics:\ncan hold any type of data can hold different types of data at the same time can not be modified We can generate tuples using curve brackets. ","date":1656374400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"ec20c731eac8e38bab478ef6175c6eec","permalink":"https://paulliautaud.github.io/teaching/computational_statistics/01_computational/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/computational_statistics/01_computational/","section":"teaching","summary":"First pratical with basis tools of R code.\nTuple A tuple is an immutable array data structure in Python with the following characteristics:\ncan hold any type of data can hold different types of data at the same time can not be modified We can generate tuples using curve brackets.","tags":null,"title":"TP1","type":"book"},{"authors":null,"categories":null,"content":"Second practical\n","date":1656374400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"2ad2d1ec7f8ef2e06873937d2915436d","permalink":"https://paulliautaud.github.io/teaching/computational_statistics/02_computational/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/computational_statistics/02_computational/","section":"teaching","summary":"Second practical","tags":null,"title":"TP2","type":"book"},{"authors":null,"categories":null,"content":"Third pratical with basis tools of R code.\nwe will see that fnk,dlfmle\n","date":1656374400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656374400,"objectID":"84c66073b54c7053fffb6ea0b48d9479","permalink":"https://paulliautaud.github.io/teaching/computational_statistics/03_computational/","publishdate":"2022-06-28T00:00:00Z","relpermalink":"/teaching/computational_statistics/03_computational/","section":"teaching","summary":"Third pratical with basis tools of R code.\nwe will see that fnk,dlfmle","tags":null,"title":"TP3","type":"book"},{"authors":null,"categories":null,"content":"Le Boosting est une méthode d’apprentissage supervisé consistant à bâtir une prédiction fiable en agrégeant les réponses d’apprenants de base, c’est-à-dire d’estimateurs tout juste meilleurs que le hasard. Cette famille d’algorithmes de machine learning construit séquentiellement des apprenants de base, encore appelés faibles ou weak learners. A chaque itération, le nouvel estimateur favorise son apprentissage sur les erreurs du précédent et s’y ajoute pour finalement obtenir un strong learner. Cette méthode a été particulièrement reconnue avec l’algorithme Adaboost (FREUND, SHAPIRE, 1996). Aujourd’hui encore de nombreux challenges sont remportés par des méthodes similaires comme XGBoost/LightGBM (FELLOUS, 2019) réputées puissantes tant sur des modèles de régression que de classification. Le Gradient Boosting proposé par FRIEDMAN (1999 et 2002) est une interprétation du Boosting comme une descente de gradient dans un espace fonctionnel appliquée à un problème d’optimisation dont la fonction objectif est l’erreur en espérance. Cette observation permet d’appliquer la méthode pour un large choix de fonctions de perte comme par exemple l’erreur quadratique en régression ou la fonction logit en classification. Considérons un exemple de weak learner qui constituera notre apprenant de base tout le long de ce cours : l’arbre décisionnel. S’il est peu profond, il est particulièrement simple à mettre en oeuvre et interprétable, en revanche sa pertinence est faible. Comment améliorer ses performances? Augmenter le nombre de noeuds est peu concluant car l’arbre souffre alors d’une variance trop forte. Les méthodes d’agrégation proposent différentes solutions effectives, en générant de multiples versions d’un arbre avant de les combiner. Disposant d’un unique jeu de données, il est alors nécessaire de le perturber pour obtenir des arbres dont les réponses sont différentes mais cohérentes. C’est ce que BREIMAN dénomme perturbing and combining (voir [1]). Dans cet esprit, le Bagging construit chaque arbre à partir d’un échantillon obtenu par bootstrapping : tirage uniforme et avec remise de même taille que le jeu d’entraînement. L’algorithme renvoie la moyenne de la collection d’arbres, estimateur plus robuste, sa variance étant diminuée. Les Forêts aléatoires, procèdent selon le même principe mais les phases d’apprentissage sont réalisées sur des souséchantillons sans remise. La dépendance entre chaque arbre est alors plus faible et par conséquent la variance de leur moyenne également et la réponse plus fiable encore. Venons en au Boosting connu pour surpasser les performances du Bagging et des Forêts alétoires. Comme chaque nouvel arbre apprend des erreurs du précédent et s’y agrège, on peut voir cela comme une diminution du biais. La variance est également améliorée par cet algorithme. Dans [2], il nous est introduit l’algorithme Stochastic Gradient Boosting en injectant de l’aléa par sous échantillonage dans le Grandient Boosting. Les résultats de prédictions peuvent gagner en précision et le coût de calcul est allégé.\nOn pourra notamment se référer à ce notebook.\nKey references [1] Breiman, Leo. (2000). Bias, Variance , And Arcing Classifiers. Technical Report 460, Statistics Department, University of California [2] Friedman, Jerome. (2002). Stochastic Gradient Boosting. Computational Statistics \u0026amp; Data Analysis.\n","date":1643673600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643673600,"objectID":"617d82fdab97ec90a0ce95c8471ab9c2","permalink":"https://paulliautaud.github.io/project/gradient_boosting/","publishdate":"2022-02-01T00:00:00Z","relpermalink":"/project/gradient_boosting/","section":"project","summary":"Gradient Boosting with Trees. Co-worker L. Ferraris","tags":["Learning","Statistical Learning","Boosting","Trees","CART","Random Trees"],"title":"Gradient Boosting","type":"project"},{"authors":null,"categories":null,"content":"A modular Pytorch Implementation of ViTGAN based on https://arxiv.org/abs/2107.04589v1\nThe goal of this projet is to provide a comprehensive framework to experiment with the ViTGAN architechture.\nGetting Started The main file on the provided code contains a simple example using MNIST, which can be trained relatively quickly. All hyper parameters of the model are specified in the .json files. More details are posted on the project link.\nContributors Lise Le Boudec, Nicolas Olivain, Paul Liautaud\nKey References [1] ViTGAN: Training GANs with Vision Transformers, Kwonjoon Lee, Huiwen Chang, Lu Jiang, Han Zhang, Zhuowen Tu, Ce Liu. Jul-2021\n[2] An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale, Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, Jakob Uszkoreit, Neil Houlsby Oct-2020\n[3] The Lipschitz Constant of Self-Attention, Hyunjik Kim, George Papamakarios, Andriy Mnih Jun-2020\n[4] Attention Is All You Need, Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz Kaiser, Illia Polosukhin Jun-2017\n[5] Generative Adversarial Networks, Ian J. Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, Yoshua Bengio Jun-2014\nSee also One can check this repository for a more minimalistic implementation.\nHelp us with a on our repository.\n","date":1643673600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1643673600,"objectID":"9aed1ce09911a18a9574b421f78e54cb","permalink":"https://paulliautaud.github.io/project/vitgan/","publishdate":"2022-02-01T00:00:00Z","relpermalink":"/project/vitgan/","section":"project","summary":"Training GANs with Visual Transformers. Co-workers L. LeBoudec, N. Olivain","tags":["Learning","Deep Learning","GAN","Neural Networks","Transformer","Computer Vision"],"title":"ViTGAN","type":"project"},{"authors":null,"categories":null,"content":"KeRF Les forêts aléatoires introduites par Leo Breiman au début des années 2000 sont une méthode de classification et de régression par apprentissage supervisé. L’approche repose sur un principe simple mais puissant, “diviser pour mieux régner” : faire plusieurs sous-échantillonnages des données, construire un arbre de décision pour chaque sous-ensemble selon un paramètre aléatoire, agréger les réponses pour obtenir la prédiction finale. Cette stratégie affiche d’excellents résultats dans divers domaines appliqués, pour en nommer quelques-uns : bio-informatique, économétrie ou encore reconnaissance d’objets 3D. La robustesse des forêts aléatoires dans des problèmes de très grande dimension associée à leur simplicité pratique (peu de paramètres sont à ajuster) en ont fait une méthode populaire. Ce succès contraste avec le peu de résultats théoriques présents dans la littérature. Les forêts demeurent une question mathématique ouverte, ce sont des objets complexes à analyser. Dans le cadre d’un problème de régression, un objectif peut être d’établir le lien entre les forêts aléatoires et des estimateurs à noyau obtenus après une légère modification de leur définition. Cette approche permet d’obtenir de nouveaux estimateurs nommés KeRF (Kernel Random Forest), qui satisfont une certaine proximité aux forêts aléatoires (dans certains cas), tout en ouvrant des perspectives d’analyses mathématiques plus profondes.\nXP Pour cette section, on pourra notamment se référer à ce notebook.\nUne comparaison entre KeRF centré, RF centré et RF Breiman évalués sur 2 modèles :\nModèle 1 : Modèle 2 : On peut également représenter 4 arbres centrés opérant sur un jeu de données indépendantes et identiquement distribuées selon une loi uniforme $\\mathcal{U}([0;1]^2)$ :\nContributions : Laure Ferraris, Paul Liautaud\n","date":1639526400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639526400,"objectID":"99a04d40f18819ad0509b0e88aaa3d8f","permalink":"https://paulliautaud.github.io/project/kerf/","publishdate":"2021-12-15T00:00:00Z","relpermalink":"/project/kerf/","section":"project","summary":"Random Forests seen as Kernel methods. Co-worker L. Ferraris","tags":["Learning","Statistical Learning","Statistics","Random Forest","CART"],"title":"Kernel Random Forest","type":"project"},{"authors":null,"categories":null,"content":"","date":1617235200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617235200,"objectID":"f921e1f2fca27c19c32d9cf09ddc4ebc","permalink":"https://paulliautaud.github.io/project/brownian_motion/","publishdate":"2021-04-01T00:00:00Z","relpermalink":"/project/brownian_motion/","section":"project","summary":"Construction, properties \u0026 application of Brownian Motion. Co-worker T. Jaffard","tags":["Probability","Brownian Motion","Stochastic Processes"],"title":"Brownian Motion","type":"project"},{"authors":["Paul Liautaud","吳恩達"],"categories":["Demo","教程"],"content":"Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more The template is mobile first with a responsive design to ensure that your site looks stunning on every device. Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://paulliautaud.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":["Paul Liautaud"],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://paulliautaud.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Paul Liautaud","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"https://paulliautaud.github.io/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]